# Multi-configuration and multi-agent job options are not exported to YAML.
# Configure these options using documentation guidance: https://docs.microsoft.com/vsts/pipelines/process/phases

variables:
  Parameters.solution: '**/*.sln'
  BuildPlatform: 'Win32,x64'
  BuildConfiguration: 'Release'
  Version.MajorMinor: $(Year:yy).0
  Version.PatchVersion: $(date:yy)$(DayOfYear)
  Version.Revision: $(rev:.rr)

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - msbuild
  - visualstudio
  - vstest

steps:
- powershell: |
   gci env:BUILD_BUILDNUMBER
   $Env:BUILD_BUILDNUMBER -match "(\d+)\.(\d+)\.(\d+)\.(\d+)"
   $m = $matches
   echo "$m"
   # echo "filename: $Env:BUILD_SOURCESDIRECTORY\core\res\bldver.rc"
   $file = gci "$Env:BUILD_SOURCESDIRECTORY\core\res\bldver.rc"
   if($file)
   {
    # echo $file
    attrib $file -r
    $fc = Get-Content($file)
    # echo $fc
    $fc = $fc -replace "#define rmj (\d+)", ("#define rmj "+$m[1])
    $fc = $fc -replace "#define rmm (\d+)", ("#define rmm "+$m[2])
    $fc = $fc -replace "#define rup (\d+)", ("#define rup "+$m[3])
    $fc = $fc -replace "#define rmn (\d+)", ("#define rmn "+$m[4])
    $fc | Out-File $file
   }
  displayName: 'Add Version'

- task: VSBuild@1
  displayName: Build
  inputs:
    vsVersion: 16.0
    msbuildArgs: '/p:SourceLinkCreate=true'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'
    clean: true
    maximumCpuCount: true
    msbuildArchitecture: x64
    createLogFile: true

- task: VSTest@2
  displayName: 'VsTest - UnitTests'
  inputs:
    runInParallel: true
    codeCoverageEnabled: true
    diagnosticsEnabled: True

- task: PublishSymbols@2
  displayName: 'Publish symbols path'
  inputs:
    IndexSources: false
    SymbolServerType: TeamServices

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)\bin'
    Contents: |
     **\mfcmapi.exe
     **\mfcmapi.pdb
     **\mrmapi.exe
     **\mrmapi.pdb
    TargetFolder: '$(build.artifactstagingdirectory)'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
