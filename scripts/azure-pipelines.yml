# Release build
name: $(Year:yy).0.$(date:yy)$(DayOfYear)$(rev:.rr)

trigger: none
pr: none

pool:
  name: Azure Pipelines
  vmImage: 'windows-latest'
  demands:
  - msbuild
  - visualstudio
  - vstest

stages:
- stage: Build
  jobs:
    - template: build.yml
      parameters:
        name: Release_Unicode_Win32
        configuration: Release Unicode
        platform: Win32
    - template: build.yml
      parameters:
        name: Release_Unicode_x64
        configuration: Release Unicode
        platform: x64

- stage: Release
  jobs:
  - job: Release
    steps:
    - checkout: self
      clean: true
      submodules: recursive

    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
      displayName: 'ESRP CodeSigning'
      inputs:
        ConnectedServiceName: 'ESRP CodeSigning Service connection'
        FolderPath: '$(System.ArtifactsDirectory)/drop'
        Pattern: '*.exe'
        signConfigType: inlineSignParams
        inlineOperation: |
         [
                 {
                     "KeyCode" : "CP-230012",
                     "OperationCode" : "SigntoolSign",
                     "Parameters" : {
                         "OpusName" : "Microsoft",
                         "OpusInfo" : "http://www.microsoft.com",
                         "FileDigest" : "/fd \"SHA256\"",
                         "PageHash" : "/NPH",
                         "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                     },
                     "ToolName" : "sign",
                     "ToolVersion" : "1.0"
                 },
                 {
                     "KeyCode" : "CP-230012",
                     "OperationCode" : "SigntoolVerify",
                     "Parameters" : {},
                     "ToolName" : "sign",
                     "ToolVersion" : "1.0"
                 }
             ]

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/MrMAPI/Release Unicode/MrMAPI.exe'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.exe.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/MrMAPI/Release Unicode/MrMAPI.pdb'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.pdb.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/MrMAPI/Release Unicode/MrMAPI.exe'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.x64.exe.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/MrMAPI/Release Unicode/MrMAPI.pdb'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MrMAPI.x64.pdb.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/Release Unicode/MFCMapi.exe'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.exe.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/Win32/Release Unicode/MFCMapi.pdb'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.pdb.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/Release Unicode/MFCMapi.exe'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.x64.exe.$(Build.BuildNumber).zip'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.ArtifactsDirectory)/drop/x64/Release Unicode/MFCMapi.pdb'
        archiveFile: '$(Build.ArtifactStagingDirectory)/MFCMAPI.x64.pdb.$(Build.BuildNumber).zip'

    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'stephenegriffin'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'userSpecifiedTag'
        tag: '$(Build.BuildNumber)'
        title: MFCMAPI Month Year ($(Build.BuildNumber))
        releaseNotesSource: 'inline'
        releaseNotesInline: |-
          Build: *$(Build.BuildNumber)*
          [![Build Status](https://dev.azure.com/mrmapi/MFCMAPI/_apis/build/status/Release/MFCMAPI%20Build?branchName=master)](https://dev.azure.com/mrmapi/MFCMAPI/_build/latest?definitionId=13&branchName=master)

          If you just want to run MFCMAPI or MrMAPI, get the executables (exe). If you want to debug them, get the symbol files (pdb).

          *The 64 bit builds will only work on a machine with 64 bit Outlook installed. All other machines should use the 32 bit builds, regardless of the operating system.*

          [![Facebook Badge](http://badge.facebook.com/badge/26764016480.2776.1538253884.png)](http://www.facebook.com/MFCMAPI)
          [Download stats](https://www.somsubhra.com/github-release-stats/?username=stephenegriffin&repository=mfcmapi&search=0)
        isDraft: true
        isPreRelease: false
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'issueBased'
        assets: |
          $(Build.ArtifactStagingDirectory)/*.zip